@model ConfidentialEternalPottery.DomainModel.Models.PriceMoment

@{
    ViewBag.Title = "Update";
}

<h2>Update</h2>
@using (Html.BeginForm("Update", "PriceMoment", new { roomId = Model.Room.RoomId }, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(m => m.Room.MinimumPrice)
    @Html.HiddenFor(m => m.Room.Capacity)
    @Html.HiddenFor(m => m.Room.RoomId)
    @Html.HiddenFor(m => m.PriceMomentId)

    <div class="form-group">
        @Html.LabelFor(model => model.Price, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Price)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.From, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <input type="date" name="@Html.NameFor(m => m.From)" value="@string.Format("{0:yyyy-MM-dd}", Model.From)" class="form-control" />
            @Html.ValidationMessageFor(model => model.From)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.To, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            <input type="date" name="@Html.NameFor(m => m.To)" value="@string.Format("{0:yyyy-MM-dd}", Model.To)" class="form-control" />
            @Html.ValidationMessageFor(model => model.To)
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="col-sm-3 pull-right btn btn-default">Save customer price period</button>
    </div>
}

<div>
    @Html.ActionLink("Return to overview", "Index", "PriceMoment", new { roomId = Model.RoomId }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
