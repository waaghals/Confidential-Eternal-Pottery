@model ConfidentialEternalPottery.ViewModels.CreateBooking

@{
    ViewBag.Title = "Book room number" + Model.Room.Number;
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("AddGuests", "Booking",
                 FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Room.RoomId)
    @Html.HiddenFor(model => model.Room.Number)
    @Html.HiddenFor(model => model.Price)

    <fieldset>
        <legend>Nights</legend>
        <div class="form-group">
            @Html.LabelFor(model => model.From, new { @class = "col-sm-2 control-label" })

            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.From, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.From)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.To, new { @class = "col-sm-2 control-label" })

            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.To, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.To)
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>Contact info</legend>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.Street, new { @class = "col-sm-2 control-label" })

            <div class="col-sm-7">
                @Html.TextBoxFor(model => model.Address.Street, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address.Street)
            </div>

            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.Address.Number, new { @class = "form-control", placeholder = "number" })
                @Html.ValidationMessageFor(model => model.Address.Number)
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">Zip code and City</label>
            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.Address.Zip, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address.Zip)
            </div>

            <div class="col-sm-7">
                @Html.TextBoxFor(model => model.Address.City, new { @class = "form-control", placeholder = "City" })
                @Html.ValidationMessageFor(model => model.Address.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "col-sm-2 control-label" })

            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", type = "email" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>
    </fieldset>
    <fieldset>
        <legend>Guests</legend>
        <div class="form-group">
            @{
                IList<SelectListItem> list = new List<SelectListItem>();
                for (int i = 1; i <= Model.Room.Capacity; i++)
                {
                    string strVal = i.ToString();
                    list.Add(new SelectListItem() { Text = strVal, Value = strVal });
                }
            }
            @Html.LabelFor(m => m.NumGuest, new { @class = "col-sm-2 control-label" })

            <div class="col-sm-10">
                @Html.DropDownListFor(model => model.NumGuest, new SelectList(list, "Text", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.NumGuest)
            </div>
        </div>
    </fieldset>
    
    <div class="form-group">
            <div class="col-sm-offset-10 col-sm-2 pull-right">
                <button type="submit" class="btn btn-default">Add guests</button>
            </div>
        </div>
}

<div>
    @Html.ActionLink("View other rooms", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
